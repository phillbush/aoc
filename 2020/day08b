#!/usr/bin/awk -f

# instruction fetch stage
function _if() {
	pc += pcinc
	restored = 0
	if (reach[pc] || wouldreach[pc]) {
		delete wouldreach
		pc = savepc
		acc = saveacc
		saved = 0
		restored = 1
	}
	instruction = mem[pc]
	if (saved)
		wouldreach[pc] = 1
	else
		reach[pc] = 1
	pcinc = 1
}

# instruction decoding stage
function _id() {
	split(instruction, a)
	opcode = a[1]
	if (!restored && !saved && opcode != "acc") {
		savepc = pc
		saveacc = acc
		saved = 1
		opcode = (opcode == "jmp" ? "nop" : "jmp")
	}
	if (opcode == "acc") {
		imm = a[2]
		wren = 1
	} else if (opcode == "jmp") {
		offs = a[2]
		wren = 0
	} else if (opcode == "nop") {
		wren = 0
	}
}

# execution stage
function _ex() {
	if (opcode == "acc")
		writeback = acc + imm
	else if (opcode == "jmp")
		pcinc = offs
}

# write-back stage
function _wb() {
	if (wren)
		acc = writeback
}

# run program
function run() {
	while (pc <= NR) {
		_if()
		_id()
		_ex()
		_wb()
	}
}

BEGIN { pc = 1 }
      { mem[NR] = $0 }
END   { run(); print acc }
