#!/usr/bin/awk -f

function btod(i, d, p) {
	p = 1
	for (i = NF; i > 0; i--) {
		if ($i ~ /[BR]/)
			d += p
		p *= 2
	}
	return d
}

function swap(A, i, j,   t) {
	t = A[i]; A[i] = A[j]; A[j] = t
}

function qsort(A, left, right,   i, last) {
	if (left >= right)
		return
	swap(A, left, left+int((right-left+1)*rand()))
	last = left
	for (i = left+1; i <= right; i++)
	{
		if (A[i] < A[left])
		{
			swap(A, ++last, i)
		}
	}
	swap(A, left, last)
	qsort(A, left, last-1)
	qsort(A, last+1, right)
}

function myseat(seat, n,    i) {
	for (i = 1; i < n; i++)
		if (seat[i] + 2 == seat[i + 1])
			return seat[i] + 1
}

BEGIN { FS = "" }
      { seat[NR] = btod() }
END   { qsort(seat, 1, NR); print myseat(seat, NR) }
