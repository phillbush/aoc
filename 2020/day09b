#!/usr/bin/awk -f

function valid(n,    i, j) {
	for (i in pre) {
		for (j in pre) {
			if (i == j)
				continue
			if (n == pre[i] + pre[j])
				return 1
		}
	}
	return 0
}

function weakness(    i, j) {
	sum = num[i = 1] + num[j = 2]
	max = (num[i] > num[j] ? num[i] : num[j])
	while (sum != found) {
		if (sum > found) {
			sum -= num[i++]
		} else {
			sum += num[++j]
			if (num[j] > max) {
				max = num[j]
			}
		}
	}
	min = num[i]
	for (; i < j; i++)
		if (num[i] < min)
			min = num[i]
	return min + max
}

NR > 25 && !found      { if (!valid($0)) {found = $0; exit} }
!found                 { pre[(NR - 1) % 25 + 1] = $0 }
                       { num[NR] = $0 }
END                    { print weakness() }
