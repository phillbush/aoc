#!/usr/bin/awk -f

function valid(n,    i, j) {
	for (i in pre) {
		for (j in pre) {
			if (i == j)
				continue
			if (n == pre[i] + pre[j])
				return 1
		}
	}
	return 0
}

function weakness(n,    i, j) {
	for (i = 1; i <= NR; i++) {
		sum = num[i]
		min = max = num[i]
		for (j = i + 1; j <= NR; j++) {
			if (num[j] < min)
				min = num[j]
			if (num[j] > max)
				max = num[j]
			sum += num[j]
			if (sum == n)
				return min + max
		}
	}
}

NR > 25 && !found      { if (!valid($0)) found = $0; nr = NR }
!found                 { pre[(NR - 1) % 25 + 1] = $0 }
                       { num[NR] = $0 }
found && NR == nr + 25 { exit }
END                    { print weakness(found) }
